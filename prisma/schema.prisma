// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Model User
model User {
  id                   String        @id @default(auto()) @map("_id") @db.ObjectId
  email                String        @unique
  name                 String
  password             String
  role                 String        @default("user")
  profileImageUrl      String?
  isEmailVerified      Boolean       @default(false)
  verificationToken    String?
  resetPasswordToken   String?
  resetPasswordExpires DateTime?
  files                File[] // Relasi dengan File
  transactions         Transaction[]
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
}

model File {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  filename  String
  path      String
  mimetype  String
  size      Int
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade) // Reference the User model
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  description     String
  size            String
  price           Int
  stock           Int
  minStock        Int
  category        String
  color           String
  productImageUrl String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  Transaction     Transaction[]
}

model Transaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade) // Reference the User model
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade) // Reference the Product model
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
